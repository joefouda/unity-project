@-webkit-keyframes thanks {
    from {
      transform: translate3d(0, -3rem, 0);
    }
    to {
      transform: translate3d(0, 0, 0);
    }
  }
  @keyframes thanks {
    from {
      transform: translate3d(0, -3rem, 0);
    }
    to {
      transform: translate3d(0, 0, 0);
    }
  }
  @-webkit-keyframes success-icon-animation {
    from {
      opacity: 0;
      transform: scale(0.1) rotate(30deg);
      transform-origin: center bottom;
    }
    50% {
      transform: rotate(-10deg) scale(1.25);
    }
    70% {
      transform: rotate(3deg);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  @keyframes success-icon-animation {
    from {
      opacity: 0;
      transform: scale(0.1) rotate(30deg);
      transform-origin: center bottom;
    }
    50% {
      transform: rotate(-10deg) scale(1.25);
    }
    70% {
      transform: rotate(3deg);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  .light-text{
      color: #a3a3a3 !important;
  }
  .success-block {
    display: flex;
    align-items: center;
    margin-left: 20%;
  }
  .success-block .title {
    font-size: 3.5rem;
    font-weight: bold;
  }
  .success-block .title > span {
    display: inline-block;
    opacity: 1;
    transition: transform 0.3s, opacity 0.3s;
    transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
    -webkit-animation: thanks 0.3s forwards;
            animation: thanks 0.3s forwards;
    margin: 0 -1px;
  }
  .success-block .title > span:nth-child(1) {
    -webkit-animation-delay: 0.045s;
            animation-delay: 0.045s;
  }
  .success-block .title > span:nth-child(2) {
    -webkit-animation-delay: 0.09s;
            animation-delay: 0.09s;
  }
  .success-block .title > span:nth-child(3) {
    -webkit-animation-delay: 0.135s;
            animation-delay: 0.135s;
  }
  .success-block .title > span:nth-child(4) {
    -webkit-animation-delay: 0.18s;
            animation-delay: 0.18s;
  }
  .success-block .title > span:nth-child(5) {
    -webkit-animation-delay: 0.225s;
            animation-delay: 0.225s;
  }
  .success-block .title > span:nth-child(6) {
    -webkit-animation-delay: 0.27s;
            animation-delay: 0.27s;
  }
  .success-block .title > span:nth-child(7) {
    -webkit-animation-delay: 0.315s;
            animation-delay: 0.315s;
  }
  .success-block .title > span:nth-child(8) {
    -webkit-animation-delay: 0.36s;
            animation-delay: 0.36s;
  }
  .success-block .title > span:nth-child(9) {
    -webkit-animation-delay: 0.405s;
            animation-delay: 0.405s;
  }
  .success-block .title > span:nth-child(10) {
    -webkit-animation-delay: 0.45s;
            animation-delay: 0.45s;
  }
  .success-block .title > span:nth-child(11) {
    -webkit-animation-delay: 0.5s;
            animation-delay: 0.5s;
  }
  .success-block .title:hover .title > span {
    -webkit-animation: thanks 0.35s forwards;
            animation: thanks 0.35s forwards;
  }
  .success-block .success-icon {
    margin-right: 1rem;
    width: 4rem;
    height: 4rem;
    color: #93c461;
    opacity: 0;
    margin-left: -2rem;
    -webkit-animation: success-icon-animation 1s 0.25s forwards;
            animation: success-icon-animation 1s 0.25s forwards;
  }



  .success-message {
    text-align: center;
  }
  
  .success-message > div {
    width: 100%;
    opacity: 0;
    animation: reveal 1s 1s forwards;
    text-align: center;
  }
  /* Appear animation for success message */
  @keyframes reveal {
    0%, 75% {
      opacity: 0;
    }
  
    100% {
      opacity: 1;
    }
  }
  
  /* 'SUCCESS!' check animation */
  svg.checkmark {
    width: 75px;
    height: 75px;
    margin: 2em auto;
    border-radius: 50%;
    display: block;
    stroke-width: 4;
    stroke: #3a74cb;
    stroke-miterlimit: 10;
    box-shadow: inset 0px 0px 0px #7ac142;
    transition: 1s all ease;
  }
  
  /* Trigger animation we add 'active' class via JS */
  svg.checkmark.active {
    animation: moveupwards 1s 1s forwards;
  }
  
  /* 'Move upwards' animation below, no need for absolutely positioned
            elements or transform: translate. We'll create the subtle 'moving up'
            effect by playing with margins and size. Responsive friendly! */
  @keyframes moveupwards {
    0%, 75% {
      width: 75px;
      height: 75px;
      margin: 2em auto;
    }
  
    100% {
      width: 50px;
      height: 50px;
      margin: 1em auto;
    }
  }
  
  /* Paths inside SVG. Each path will be animated using stroke property
            and 'stroke' animation */
  svg > .checkmark-circle {
    stroke-dasharray: 166;
    stroke-dashoffset: 166;
    stroke-width: 3;
    stroke-miterlimit: 10;
    stroke: #3a74cb;
    fill: none;
    animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
  }
  
  svg > .checkmark-check {
    transform-origin: 50% 50%;
    stroke-dasharray: 48;
    stroke-width: 3;
    stroke-dashoffset: 48;
    animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
  }
  
  @keyframes stroke {
    100% {
      stroke-dashoffset: 0;
    }
  }
  
  /* Sorry IE and Edge users, no SVG animations supported for you,
          so we'll hide our SVG to prevent empty space gap */
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    .success-message svg {
      display: none;
    }
  }
  
  @supports (-ms-ime-align: auto) {
    .success-message svg {
      display: none;
    }
  }


  ::ng-deep .navigation .link nb-icon {
    display: none !important;
  }
  
